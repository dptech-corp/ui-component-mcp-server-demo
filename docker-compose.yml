version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: ui-mcp-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ui-mcp-redis
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: ui-mcp-server
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - MCP_PORT=8001
      - LOG_LEVEL=INFO
      - CODE_INTERPRETER_TOKEN=1234
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./mcp-server/src:/app/src
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ui-mcp-backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - LOG_LEVEL=INFO
      - SESSION_ID=${SESSION_ID}
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    volumes:
      - ./backend/app:/app/app
      - backend_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8000
        VITE_SSE_URL: http://localhost:8000/events
    container_name: ui-mcp-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_SSE_URL=http://localhost:8000/events
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: unless-stopped

  agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: ui-mcp-agent
    ports:
      - "8002:8002"
    environment:
      - MCP_SERVER_URL=http://mcp-server:8001
      - LLM_MODEL=${LLM_MODEL}
      - OPENAI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL}
      # - SESSION_DB_URL=${SESSION_DB_URL}
      - SESSION_DB_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
    depends_on:
      mcp-server:
        condition: service_started
    volumes:
      - ./agent/src:/app/src
    restart: unless-stopped
    command: ["./start_web.sh"]

  hyper-fib-backend:
    build:
      context: ./hyper-fib
      dockerfile: Dockerfile.backend
    container_name: hyper-fib-backend
    ports:
      - "5001:5001"
    environment:
      - LOG_LEVEL=INFO
    volumes:
      - ./hyper-fib:/app
    restart: unless-stopped

  chat-frontend:
    build:
      context: ./chat-frontend
      dockerfile: Dockerfile
    container_name: ui-mcp-chat-frontend
    ports:
      - "3002:3002"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_SSE_URL=http://localhost:8000/events
      - ADK_API_URL=http://agent:8002
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./chat-frontend:/app
      - /app/node_modules
    restart: unless-stopped

  hyper-fib-frontend:
    build:
      context: ./hyper-fib/frontend/app
      dockerfile: Dockerfile
    container_name: hyper-fib-frontend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - REACT_APP_BACKEND_URL=http://localhost:5001
    depends_on:
      - hyper-fib-backend
    volumes:
      - ./hyper-fib/frontend/app/src:/app/src
      - ./hyper-fib/frontend/app/public:/app/public
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  backend_data:
    driver: local
  mysql_data:
    driver: local

networks:
  default:
    name: ui-mcp-network
