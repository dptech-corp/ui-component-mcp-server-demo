version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: ui-mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: ui-mcp-server
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - MCP_PORT=8001
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./mcp-server/src:/app/src
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ui-mcp-backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend/app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ui-mcp-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_SSE_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: ui-mcp-network
